# Generated by roxygen2: do not edit by hand

S3method(get_scores,causal_forest)
S3method(get_scores,causal_survival_forest)
S3method(get_scores,instrumental_forest)
S3method(get_scores,multi_arm_causal_forest)
S3method(plot,grf_tree)
S3method(plot,rank_average_treatment_effect)
S3method(predict,boosted_regression_forest)
S3method(predict,causal_forest)
S3method(predict,causal_survival_forest)
S3method(predict,instrumental_forest)
S3method(predict,ll_regression_forest)
S3method(predict,lm_forest)
S3method(predict,multi_arm_causal_forest)
S3method(predict,multi_regression_forest)
S3method(predict,probability_forest)
S3method(predict,quantile_forest)
S3method(predict,regression_forest)
S3method(predict,survival_forest)
S3method(print,boosted_regression_forest)
S3method(print,grf)
S3method(print,grf_tree)
S3method(print,rank_average_treatment_effect)
S3method(print,tuning_output)
export(average_late)
export(average_partial_effect)
export(average_treatment_effect)
export(best_linear_projection)
export(boosted_regression_forest)
export(causal_forest)
export(causal_survival_forest)
export(custom_forest)
export(generate_causal_data)
export(generate_causal_survival_data)
export(get_forest_weights)
export(get_leaf_node)
export(get_sample_weights)
export(get_scores)
export(get_tree)
export(instrumental_forest)
export(ll_regression_forest)
export(lm_forest)
export(merge_forests)
export(multi_arm_causal_forest)
export(multi_regression_forest)
export(probability_forest)
export(quantile_forest)
export(rank_average_treatment_effect)
export(regression_forest)
export(split_frequencies)
export(survival_forest)
export(test_calibration)
export(tune_causal_forest)
export(tune_instrumental_forest)
export(tune_regression_forest)
export(variable_importance)
importFrom(Matrix,Matrix)
importFrom(Rcpp,evalCpp)
importFrom(stats,coef)
importFrom(stats,dbeta)
importFrom(stats,lm)
importFrom(stats,median)
importFrom(stats,pnorm)
importFrom(stats,predict)
importFrom(stats,rbinom)
importFrom(stats,rexp)
importFrom(stats,rnorm)
importFrom(stats,rpois)
importFrom(stats,runif)
importFrom(stats,sd)
importFrom(stats,var)
importFrom(stats,weighted.mean)
useDynLib(grf)
